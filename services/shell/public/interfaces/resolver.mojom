// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module shell.mojom;

import "mojo/common/common_custom_types.mojom";
import "services/shell/public/interfaces/capabilities.mojom";

// The result of a Resolve operation via Resolver.
struct ResolveResult {
  // The mojo: name that was requested to be resolved.
  string name;

  // The mojo: name of the physical package supplying the requested name. This
  // could be the same name that was passed, or the name of a package that
  // contains it.
  string resolved_name;

  // An additional piece of metadata that identifies what instance |name| should
  // be run in. It's possible that |name| may provide several services that
  // should be run as different instances.
  string qualifier;

  // The set of capabilities provided and required by |name|.
  CapabilitySpec? capabilities;

  // A path to the package file specified by |name|.
  mojo.common.mojom.FilePath package_path;
};

// Implemented exclusively for the Service Manager's use in resolving mojo:
// names and reading static manifest information.
interface Resolver {
  // Resolves |mojo_name| and returns a ResolveResult containing metadata from
  // the catalog that the Service Manager uses to run an instance of it.
  ResolveMojoName(string mojo_name) => (ResolveResult result);
};
