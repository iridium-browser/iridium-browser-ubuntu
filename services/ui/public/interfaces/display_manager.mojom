// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module ui.mojom;

import "services/ui/public/interfaces/window_manager_constants.mojom";

interface DisplayManagerObserver {
  // Sent when the observer is added. |displays| will contain all known
  // displays. If the system that WS is running on has an integrated display,
  // for example a laptop internal display, then |internal_display_id| will
  // be the corresponding dislay id. If there is no internal display then
  // |internal_display_id| will be kInvalidDisplayID.
  OnDisplays(array<WsDisplay> displays,
             int64 primary_display_id,
             int64 internal_display_id);

  // The specified set of displays has changed in some way. This is used both
  // when a new display is added, or when a property of a display changes.
  // |displays| does not necessarily contain the complete set of displays,
  // only those that changed.
  OnDisplaysChanged(array<WsDisplay> displays);

  // An existing display was removed.
  OnDisplayRemoved(int64 display_id);

  // The primary display has changed.
  OnPrimaryDisplayChanged(int64 primary_display_id);
};

interface DisplayManager {
  AddObserver(DisplayManagerObserver observer);
};
