# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//testing/test.gni")

source_set("proximity_auth") {
  sources = [
    "authenticator.h",
    "bluetooth_connection.cc",
    "bluetooth_connection.h",
    "bluetooth_connection_finder.cc",
    "bluetooth_connection_finder.h",
    "bluetooth_throttler.h",
    "bluetooth_throttler_impl.cc",
    "bluetooth_throttler_impl.h",
    "bluetooth_util.cc",
    "bluetooth_util.h",
    "bluetooth_util_chromeos.cc",
    "client.h",
    "client_impl.cc",
    "client_impl.h",
    "client_observer.h",
    "connection.cc",
    "connection.h",
    "connection_finder.h",
    "connection_observer.h",
    "controller.h",
    "device_to_device_authenticator.cc",
    "device_to_device_authenticator.h",
    "device_to_device_initiator_operations.cc",
    "device_to_device_initiator_operations.h",
    "device_to_device_secure_context.cc",
    "device_to_device_secure_context.h",
    "metrics.cc",
    "metrics.h",
    "proximity_auth_client.h",
    "proximity_auth_system.cc",
    "proximity_auth_system.h",
    "proximity_monitor.h",
    "proximity_monitor_impl.cc",
    "proximity_monitor_impl.h",
    "proximity_monitor_observer.h",
    "remote_device.cc",
    "remote_device.h",
    "remote_status_update.cc",
    "remote_status_update.h",
    "screenlock_bridge.cc",
    "screenlock_bridge.h",
    "screenlock_state.h",
    "secure_context.h",
    "switches.cc",
    "switches.h",
    "throttled_bluetooth_connection_finder.cc",
    "throttled_bluetooth_connection_finder.h",
    "unlock_manager.cc",
    "unlock_manager.h",
    "wire_message.cc",
    "wire_message.h",
  ]

  deps = [
    "cryptauth/proto",
    "logging",
    "//base",
    "//device/bluetooth",
    "//net",
  ]
}

source_set("test_support") {
  testonly = true

  sources = [
    "device_to_device_responder_operations.cc",
    "device_to_device_responder_operations.h",
  ]

  deps = [
    "cryptauth:test_support",
    "//base",
  ]
}

source_set("unit_tests") {
  testonly = true
  sources = [
    "bluetooth_connection_finder_unittest.cc",
    "bluetooth_connection_unittest.cc",
    "bluetooth_throttler_impl_unittest.cc",
    "client_impl_unittest.cc",
    "connection_unittest.cc",
    "device_to_device_authenticator_unittest.cc",
    "device_to_device_operations_unittest.cc",
    "device_to_device_secure_context_unittest.cc",
    "proximity_auth_system_unittest.cc",
    "proximity_monitor_impl_unittest.cc",
    "remote_status_update_unittest.cc",
    "throttled_bluetooth_connection_finder_unittest.cc",
    "unlock_manager_unittest.cc",
    "wire_message_unittest.cc",
  ]

  configs += [ "//build/config/compiler:no_size_t_to_int_warning" ]

  deps = [
    ":proximity_auth",
    ":test_support",
    "ble:unit_tests",
    "cryptauth:test_support",
    "cryptauth:unit_tests",
    "logging:unit_tests",
    "//base/test:test_support",
    "//device/bluetooth:mocks",
    "//testing/gmock",
    "//testing/gtest",
  ]
}

# Note: This is a convenience target for ease of rapid iteration during
# development. It is not executed on any try or build bots.
test("proximity_auth_unittests") {
  sources = [
    "run_all_unittests.cc",
  ]
  deps = [
    ":unit_tests",
  ]
}
