// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module mojo;

import "components/view_manager/public/interfaces/compositor_frame.mojom";

struct ReturnedResource {
  uint32 id;
  uint32 sync_point;
  int32 count;
  bool lost;
};

interface ResourceReturner {
  ReturnResources(array<ReturnedResource> resources);
};

interface Surface {
  // Request the id namespace for this connection. Fully qualified surface ids
  // are the combination of the id_namespace for the connection that created the
  // surface and the id_local component allocated by the caller.
  GetIdNamespace() => (uint32 id_namespace);

  // Sets a ResourceReturner that will receive unused resources.
  SetResourceReturner(ResourceReturner returner);

  // Creates a new surface with the given local identifier. Once a surface is
  // created the caller may submit frames to it or destroy it using the local
  // identifier. The caller can also produce a fully qualified surface id that
  // can be embedded in frames produces by different connections.
  CreateSurface(uint32 id_local);

  // After the submitted frame is drawn for the first time, the surface will
  // respond to the SubmitFrame message. Clients should use this acknowledgement
  // to ratelimit frame submissions.
  SubmitFrame(uint32 id_local, CompositorFrame frame) => ();
  DestroySurface(uint32 id_local);
};
