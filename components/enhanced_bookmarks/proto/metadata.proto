// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
syntax = "proto2";
option optimize_for = LITE_RUNTIME;

package image.collections;

message ImageData {
  // Encrypted 64-bit image doc id, if it has been crawled,
  // e.g. "kY7_4LKgNqDrbM:"
  optional string doc_id = 1;

  message ImageInfo {
    // The (normalized) URL this image can be found at.
    optional string url = 1;

    // The dimensions in pixels.
    optional int32 width = 2;
    optional int32 height = 3;
  }

  // Information about the original collected image.
  optional ImageInfo original_info = 2;

  // Information about the server hosted thumbnail.
  optional ImageInfo thumbnail_info = 3;

  // The expiration timestamp of the served thumbnail, in microseconds since
  // epoch. The thumbnail is only guaranteed until this time, afterwards the
  // URL may be broken.
  // If expiration_timestamp is not present, then whoever set the thumbnail_info
  // should guarantee that the thumbnail will not expire.
  optional int64 expiration_timestamp = 5;

  // Represents an explicit user action to remove an image. This will prevent
  // any additional backfilling once this is set.
  optional bool user_removed_image = 6;
}

message PageData {
  // The title of the web page.
  optional string title = 1;

  // A snippet of text from the web page, either computed by us or chosen by
  // the user.
  optional string snippet = 2;

  // The (normalized) URL of the web page.
  optional string url = 3;

  // The /url redirect signed URL for the web page.  This could be appended to
  // "www.google.com" to create a URL redirect.
  optional string signed_url = 5;

  // The doc id of the page, if in the index. Uses the same encrypted docid
  // format as ImageData.
  optional string doc_id = 4;
}
