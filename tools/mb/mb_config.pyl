# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

{
  # This is the list of configs that you can pass to mb; each config
  # represents a particular combination of GYP_DEFINES/gn args that
  # we must support. A given config *may* be platform-specific but
  # is not necessarily so (i.e., we might have mac, win, and linux
  # bots all using the 'gn_release_bot' config).
  'configs': {
    'android_cast_gyp_debug_static_bot': ['android', 'cast', 'gyp', 'debug_static_bot'],
    'android_clang_asan_gyp_debug_bot': ['android', 'clang', 'asan', 'gyp', 'debug_bot'],
    'android_gn_debug_bot': ['android', 'gn', 'debug_bot'],
    'android_gn_release_bot': ['android', 'gn', 'release_bot'],
    'android_gn_release_trybot': ['android', 'gn', 'release_trybot'],
    'android_gyp_debug_bot': ['android', 'gyp', 'debug_bot'],
    'android_gyp_debug_static_bot': ['android', 'gyp', 'debug_static_bot'],
    'android_gyp_debug_static_bot_arm64': ['android', 'gyp', 'debug_static_bot', 'arm64'],
    'android_gyp_release_bot': ['android', 'gyp', 'release_bot'],
    'android_gyp_release_trybot': ['android', 'gyp', 'release_trybot'],
    'cast_gyp_release_bot': ['cast', 'gyp', 'release_bot'],
    'cast_gyp_release_trybot': ['cast', 'gyp', 'release_trybot'],
    'chromeos_gn_debug_bot': ['chromeos', 'gn', 'debug_bot'],
    'chromeos_gn_release_bot': ['chromeos', 'gn', 'release_bot'],
    'chromeos_gn_release_trybot': ['chromeos', 'gn', 'release_trybot'],
    'dev_gn_debug': ['gn', 'debug', 'shared', 'full_symbols'],
    'dev_gn_release': ['gn', 'release', 'shared'],
    'dev_gyp_debug': ['gyp', 'debug', 'shared', 'full_symbols'],
    'dev_gyp_release': ['gyp', 'release', 'shared'],
    'embedded_gyp_debug_bot': ['embedded', 'gyp', 'debug_bot'],
    'gn_debug_bot': ['gn', 'debug_bot'],
    'gn_debug_bot_minimal_symbols': ['gn', 'debug_bot_minimal_symbols'],
    'gn_debug_bot_minimal_symbols_x86': ['gn', 'debug_bot_minimal_symbols', 'x86'],
    'gn_debug_static_bot': ['gn', 'debug_static_bot'],
    'gn_linux_upload': ['gn_linux_upload', 'official', 'goma'],
    'gn_release_bot': ['gn', 'release_bot'],
    'gn_release_bot_minimal_symbols': ['gn', 'release_bot_minimal_symbols'],
    'gn_release_bot_minimal_symbols_x86': ['gn', 'release_bot_minimal_symbols', 'x86'],
    'gn_release_trybot': ['gn', 'release_trybot'],
    'gn_release_trybot_x86': ['gn', 'release_trybot', 'x86'],
    'gyp_debug_bot': ['gyp', 'debug_bot'],
    'gyp_debug_bot_x86': ['gyp', 'debug_bot', 'x86'],
    'gyp_official': ['gyp', 'official'],
    'gyp_official_goma': ['gyp', 'official', 'goma'],
    'gyp_official_goma_chromeos': ['gyp', 'official', 'goma', 'chromeos'],
    'gyp_official_goma_x86': ['gyp', 'official', 'goma', 'x86'],
    'gyp_official_goma_minimal_symbols': ['gyp', 'official', 'goma', 'minimal_symbols'],
    'gyp_official_goma_minimal_symbols_android': ['gyp', 'official', 'goma', 'minimal_symbols', 'android'],
    'gyp_official_goma_minimal_symbols_android_arm64': ['gyp', 'official', 'goma', 'minimal_symbols', 'android', 'arm64'],
    'gyp_official_goma_minimal_symbols_x64': ['gyp', 'official', 'goma', 'minimal_symbols', 'x64'],
    'gyp_official_goma_minimal_symbols_x86': ['gyp', 'official', 'goma', 'minimal_symbols', 'x86'],
    'gyp_release_bot_arm': ['gyp', 'release_bot', 'arm', 'crosscompile'],
    'gyp_release_trybot': ['gyp', 'release_trybot'],

    # This is just for completeness; any bot that uses this config should never actually run MB.
    'none': ['none'],

    'swarming_asan_lsan_gyp_release_trybot': ['swarming', 'asan', 'lsan', 'release_trybot'],
    'swarming_msan_gyp_release_trybot': ['swarming', 'chromeos', 'msan', 'gyp', 'release_trybot'],
    'swarming_deterministic_gyp_release_bot': ['swarming', 'deterministic', 'gyp', 'release_bot'],
    'swarming_gpu_tests_gn_release_trybot': ['swarming', 'gpu_tests', 'gn', 'release_trybot'],
    'swarming_gpu_tests_gyp_debug_trybot': ['swarming', 'gpu_tests', 'gyp', 'debug_trybot'],
    'swarming_gpu_tests_gyp_release_trybot': ['swarming', 'gpu_tests', 'gyp', 'release_trybot'],
    'swarming_gn_debug_bot': ['swarming', 'gn', 'debug_bot'],
    'swarming_gn_debug_trybot': ['swarming', 'gn', 'debug_trybot'],
    'swarming_gn_release_bot': ['swarming', 'gn', 'release_bot'],
    'swarming_gyp_debug_bot_no_symbols_x86': ['swarming', 'gyp', 'debug_bot', 'no_symbols', 'x86'],
    'swarming_gyp_debug_trybot_x86': ['swarming', 'gyp', 'debug_trybot', 'x86'],
    'swarming_gyp_release_bot': ['swarming', 'gyp', 'release_bot'],
    'swarming_gyp_release_trybot': ['swarming', 'gyp', 'release_trybot'],
    'swarming_gyp_release_trybot_arm': ['swarming', 'gyp', 'release_trybot', 'arm', 'crosscompile'],
    'swarming_gyp_release_trybot_arm_float': ['swarming', 'gyp', 'release_trybot', 'arm_float', 'crosscompile'],
    'swarming_tsan_gyp_release_trybot': ['swarming', 'disable_nacl', 'tsan', 'gyp', 'release_trybot'],

    # clang/win doesn't work with goma yet, so this can't use debug_bot:
    'win_clang_debug_bot': ['gn', 'clang', 'debug', 'shared', 'minimal_symbols'],
  },

  # This is a list of configs that do not actually exist on any bot
  # but are used so commonly by devs that we must support them.
  'common_dev_configs': [
    'dev_gn_debug',
    'dev_gn_release',
    'dev_gyp_debug',
    'dev_gyp_release',
  ],

  # This is a list of configs that some private (not publicly accessible)
  # bot somewhere uses and that we must support. Ideally we should actually
  # have a bot for each of these on the public waterfall. Each config should
  # at least have a contact listed.
  'private_configs': [
  ],

  # This is a list of configs that are not commonly used by that we should
  # make some effort to support, but if it breaks that is not the end of
  # the world. Each config should have a contact listed, and we expect the
  # contact to be on the hook for fixing the config.
  'unsupported_configs': [
  ],

  # This is a dict mapping a given 'mixin' name to a dict of settings that
  # mb should use. See //tools/mb/docs/user_guide.md for more information.
  'mixins': {
    'android': {
      'gn_args': 'target_os="android"',
      'gyp_defines': 'OS=android',
    },

    'arm': {
      'gn_args': 'target_cpu="arm"',
      'gyp_defines': 'target_arch=arm',
    },

    'arm64': {
      'gn_args': 'target_cpu="arm64"',
      'gyp_defines': 'target_arch=arm64',
    },

    'arm_float': {
      'gn_args': 'error',
      'gyp_defines': 'target_arch=arm arm_float_abi=hard',
    },

    'arm64': {
      'gn_args': 'target_cpu="arm64"',
      'gyp_defines': 'target_arch=arm64',
    },

    'asan': {
      'gn_args': 'is_asan=true',
      'gyp_defines': 'asan=1',
    },

    'cast': {
      'gn_args': '# TODO: Need the GN equivalents for a Chromecast build.',
      'gyp_defines': 'chromecast=1',
    },

    'chromeos': {
      'gn_args': 'target_os="chromeos"',
      'gyp_defines': 'chromeos=1',
    },

    'clang': {
      'gn_args': 'is_clang=true',
      'gyp_defines': 'clang=1',
    },

    'crosscompile': {
      # This mixin is only needed on GYP bots that are doing cross-compiles
      # but are *not* targetting Android or iOS (where build/gyp_chromium
      # will set the crosscompile variable automatically). It is not need
      # in GN at all.
      'gyp_crosscompile': True,
    },

    'dcheck_always_on': {
      'gn_args': 'dcheck_always_on=true',
      'gyp_defines': 'dcheck_always_on=1',
    },

    'debug': {
      'gn_args': 'is_debug=true',
    },

    'debug_bot': {
      'mixins': ['debug', 'shared', 'goma'],
    },

    'debug_bot_minimal_symbols': {
      'mixins': ['debug_bot', 'minimal_symbols'],
    },

    'debug_static_bot': {
      'mixins': ['debug', 'static', 'minimal_symbols', 'goma']
    },

    'debug_trybot': {
      'mixins': ['debug_bot_minimal_symbols'],
    },

    'deterministic': {
      'gn_args': 'error',
      'gyp_defines': 'dont_embed_build_metadata=1',
    },

    'disable_nacl': {
      'gn_args': 'enable_nacl=false',
      'gyp_defines': 'disable_nacl=1',
    },

    'embedded': {
      'gn_args': 'error',
      'gyp_defines': 'embedded=1',
    },

    'full_symbols': {
      'gn_args': 'symbol_level=2',
      'gyp_defines': 'fastbuild=0',
    },

    'gn_linux_upload': {
      'type': 'gn',

      # We don't want to require a runtime dependency on glib in the
      # GN binary; ideally we could just turn glib off, but that doesn't
      # actually work, so we need to pretend to be doing an ozone build
      # in order for the flag to actually take effect.
      'gn_args': 'use_ozone=true',
    },

    'gn': {'type': 'gn'},

    'goma': {
      # The MB code will properly escape goma_dir if necessary in the GYP
      # code path; the GN code path needs no escaping.
      'gn_args': 'use_goma=true goma_dir="$(goma_dir)"',
      'gyp_defines': 'use_goma=1 gomadir=$(goma_dir)',
    },

    'gpu_tests': {
      'gn_args': '', # not needed in GN builds.
      'gyp_defines': 'archive_gpu_tests=1',
    },

    'gyp': {'type': 'gyp'},

    'lsan': {
      'gn_args': 'use_lsan=true',
      'gyp_defines': 'lsan=1',
    },

    'minimal_symbols': {
      'gn_args': 'symbol_level=1',
      'gyp_defines': 'fastbuild=1',
    },

    'msan': {
      'gn_args': 'use_msan=true',
      'gyp_defines': 'msan=1 msan_track_origins=2 use_prebuilt_instrumented_libraries=1',
    },

    'no_symbols': {
      'gn_args': 'symbol_level=0',
      'gyp_defines': 'fastbuild=2',
    },

    # This config is used by bots that aren't building Chromium and should
    # never be running MB. It is used for tracking purposes. These values
    # were picked such that if someone did try to run MB, both GN and GYP
    # should error out.
    'none': {
      'gn_args': 'error',
      'gyp_defines': 'target_arch=unknown',
    },

    'official': {
      'gn_args': 'is_chrome_branded=true is_official_build=true is_debug=false',
      'gyp_defines': 'branding=Chrome buildtype=Official',
    },

    'release': {
      'gn_args': 'is_debug=false',
    },

    'release_bot': {
      'mixins': ['release', 'static', 'goma'],
    },

    'release_bot_minimal_symbols': {
      'mixins': ['release_bot', 'minimal_symbols'],
    },

    'release_trybot': {
      'mixins': ['release_bot_minimal_symbols', 'dcheck_always_on']
    },

    'shared': {
      'gn_args': 'is_component_build=true',
      'gyp_defines': 'component=shared_library',
    },

    'static': {
      'gn_args': 'is_component_build=false',
      'gyp_defines': 'component=static_library',
    },

    'swarming': {
      'gn_args': '',
      'gyp_defines': 'test_isolation_mode=prepare',
    },

    'tsan': {
      'gn_args': 'use_tsan=true',
      'gyp_defines': 'tsan=1',
    },

    'x64': {
      'gn_args': 'target_cpu="x64"',
      'gyp_defines': 'target_arch=x64',
    },

    'x86': {
      'gn_args': 'target_cpu="x86"',
      'gyp_defines': 'target_arch=ia32',
    },
  },

  # This is a map of buildbot master names -> buildbot builder names ->
  # config names (where each config name is a key in the 'configs' dict,
  # above). mb uses this dict to look up which config to use for a given bot.
  # The builders should be sorted by the order they appear in the /builders
  # page on the buildbots, *not* alphabetically.
  #
  # TODO(crbug.com/481692): Add in remaining bots on the waterfalls.
  'masters': {
    'chrome': {
      'precise64': 'gyp_official',
    },
    'chromium.chrome': {
      'Google Chrome Win': 'gyp_official_goma_minimal_symbols_x86',
      'Google Chrome Linux': 'gyp_official_goma_x86',
      'Google Chrome Linux x64': 'gyp_official_goma',
      'Google Chrome Mac': 'gyp_official_goma',
      'Google Chrome ChromeOS': 'gyp_official_goma_chromeos',
    },
    'chromium.chromiumos': {
      'Linux ChromiumOS GN': 'chromeos_gn_release_bot',
      'Linux ChromiumOS GN (dbg)': 'chromeos_gn_debug_bot',
    },
    'chromium.linux': {
      'Linux Builder': 'swarming_gn_release_bot',
      'Linux Tests': 'swarming_gn_release_bot',
      'Linux Builder (dbg)(32)': 'swarming_gyp_debug_bot_no_symbols_x86',
      'Linux Tests (dbg)(1)(32)': 'swarming_gyp_debug_bot_no_symbols_x86',
      'Linux Builder (dbg)': 'swarming_gn_debug_bot',
      'Linux Tests (dbg)(1)': 'swarming_gn_debug_bot',
      'Linux GN': 'gn_release_bot',
      'Linux GN Clobber': 'gn_release_bot',
      'Linux GN (dbg)': 'gn_debug_bot',
      'Linux ARM': 'gyp_release_bot_arm',
      'Cast Linux': 'cast_gyp_release_bot',
      'Android Arm64 Builder (dbg)': 'android_gyp_debug_static_bot_arm64',
      'Android Builder (dbg)': 'android_gyp_debug_static_bot',
      'Android Tests (dbg)': 'android_gyp_debug_static_bot',
      'Android Builder': 'android_gyp_release_bot',
      'Android Tests': 'android_gyp_release_bot',
      'Android Clang Builder (dbg)': 'android_clang_asan_gyp_debug_bot',
      'Android GN': 'android_gn_release_bot',
      'Android GN (dbg)': 'android_gn_debug_bot',
      'Cast Android (dbg)': 'android_cast_gyp_debug_static_bot',
    },
    'chromium.mac': {
      'Mac GN': 'gn_release_bot',
      'Mac GN (dbg)': 'gn_debug_static_bot',
    },
    'chromium.mojo': {
      'Chromium Mojo Android': 'android_gn_release_bot',
      'Chromium Mojo Linux Perf': 'gn_release_bot',
      'Chromium Mojo Android Nexus5 Perf': 'android_gn_release_bot',
      'Chromium Mojo Windows': 'gn_release_bot_minimal_symbols_x86',
      'Chromium Mojo Linux': 'gn_release_bot',
      'Chromium Mojo Windows 7 Perf': 'gn_release_bot_minimal_symbols_x86',
    },
    'chromium.perf': {
      'Android Builder': 'gyp_official_goma_minimal_symbols_android',
      'Android arm64 Builder': 'gyp_official_goma_minimal_symbols_android_arm64',
      'Win Builder': 'gyp_official_goma_minimal_symbols_x86',
      'Win x64 Builder': 'gyp_official_goma_minimal_symbols_x64',
      'Mac Builder': 'gyp_official_goma',
      'Linux Builder': 'gyp_official_goma',
    },
    'chromium.win': {
      # Windows bots take too long to link w/ full symbols and time out.
      'Win x64 GN': 'gn_release_bot_minimal_symbols',
      'Win x64 GN (dbg)': 'gn_debug_bot_minimal_symbols',
      'Win8 Aura': 'gn_release_bot_minimal_symbols_x86',
      'Win8 GN': 'gn_release_bot_minimal_symbols_x86',
      'Win8 GN (dbg)': 'gn_debug_bot_minimal_symbols_x86',
    },
    'chromium.webkit': {
      'Android GN': 'android_gn_release_bot',
      'Android GN (dbg)': 'android_gn_debug_bot',
      'Linux GN': 'gn_release_bot',
      'Linux GN (dbg)': 'gn_debug_bot'
    },
    'chromium.fyi': {
      'CrWinClang64(dbg)': 'win_clang_debug_bot',
    },
    'chromium.webrtc.fyi': {
      'Android GN': 'android_gn_release_bot',
      'Android GN (dbg)': 'android_gn_debug_bot',
      'Linux GN': 'gn_release_bot',
      'Linux GN (dbg)': 'gn_debug_bot',
      'Mac GN': 'gn_release_bot',
      'Mac GN (dbg)': 'gn_debug_static_bot',
      'Win GN': 'gn_release_bot_minimal_symbols_x86',
      'Win GN (dbg)': 'gn_debug_bot_minimal_symbols_x86',
    },
    'client.skia': {
      'Linux Builder': 'swarming_gyp_release_bot',
      'Linux Builder-Trybot': 'swarming_gyp_release_bot',
      'Linux Tests': 'swarming_gyp_release_bot',
    },

    'client.v8.fyi': {
      'V8 Linux GN': 'gn_release_bot',
      'V8 Android GN (dbg)': 'android_gn_debug_bot',
    },
    'tryserver.blink': {
      'android_blink_compile_dbg': 'android_gyp_debug_bot',
      'android_blink_compile_rel': 'android_gyp_release_trybot',
      'android_chromium_gn_compile_rel': 'android_gn_release_bot',
      'linux_chromium_gn_rel': 'gn_release_bot',
    },
    'tryserver.chromium.angle': {
      'linux_angle_rel_ng': 'swarming_gpu_tests_gyp_release_trybot',
      'linux_angle_dbg_ng': 'swarming_gpu_tests_gyp_debug_trybot',
    },
    'tryserver.chromium.linux': {
      'linux_chromium_asan_rel_ng': 'swarming_asan_lsan_gyp_release_trybot',
      'linux_full_bisect_builder': 'swarming_gyp_release_bot',
      'linux_site_isolation': 'gyp_release_trybot',
      'linux_chromium_compile_rel_ng': 'swarming_gyp_release_trybot',
      'linux_chromium_rel_ng': 'swarming_gpu_tests_gn_release_trybot',
      'linux_chromium_gn_rel': 'gn_release_trybot',
      'linux_chromium_gn_chromeos_rel': 'chromeos_gn_release_trybot',
      'android_chromium_gn_compile_rel': 'android_gn_release_trybot',
      'linux_chromium_compile_dbg_ng': 'swarming_gn_debug_trybot',
      'linux_chromium_dbg_ng': 'swarming_gn_debug_trybot',
      'linux_chromium_trusty_dbg': 'gyp_debug_bot',
      'linux_chromium_trusty32_dbg': 'gyp_debug_bot_x86',
      'linux_chromium_gn_dbg': 'gn_debug_bot',
      'linux_chromium_gn_chromeos_dbg': 'chromeos_gn_debug_bot',
      'android_chromium_gn_compile_dbg': 'android_gn_debug_bot',
      'linux_chromium_msan_rel_ng': 'swarming_msan_gyp_release_trybot',
      'linux_chromium_tsan_rel_ng': 'swarming_tsan_gyp_release_trybot',
      'linux_chromium_practice_rel_ng': 'gyp_release_trybot',
      'linux_arm_compile': 'swarming_gyp_release_trybot_arm',
      'linux_arm': 'swarming_gyp_release_trybot_arm_float',
      'linux_arm_tester': 'none',
      'linux_chromium_compile_dbg_32_ng': 'swarming_gyp_debug_trybot_x86',
      'linux_chromium_dbg_32_ng': 'swarming_gyp_debug_trybot_x86',
      'linux_chromium_clobber_rel_ng': 'gyp_release_trybot',
      'linux_chromium_gn_upload': 'gn_linux_upload',
      'cast_shell_linux': 'cast_gyp_release_trybot',
      'linux_deterministic': 'swarming_deterministic_gyp_release_bot',
      'linux_ecs_ozone': 'embedded_gyp_debug_bot',
    },
    'tryserver.chromium.mac': {
      'mac_chromium_gn_dbg': 'gn_debug_static_bot',
      'mac_chromium_gn_rel': 'gn_release_trybot',
      'mac_chromium_gn_upload': 'gn_release_bot',
    },
    'tryserver.chromium.perf': {
      'android_perf_bisect_builder': 'gyp_official_goma_minimal_symbols_android',
      'android_arm64_perf_bisect_builder': 'gyp_official_goma_minimal_symbols_android_arm64',
      'linux_perf_bisect_builder': 'gyp_official_goma',
      'mac_perf_bisect_builder': 'gyp_official_goma',
      'win_perf_bisect_builder': 'gyp_official_goma_minimal_symbols_x86',
      'winx64_bisect_builder': 'gyp_official_goma_minimal_symbols',
    },
    'tryserver.chromium.win': {
      'win_chromium_gn_x64_dbg': 'gn_debug_bot_minimal_symbols',
      'win_chromium_gn_x64_rel': 'gn_release_trybot',
      'win8_chromium_ng': 'gn_release_trybot_x86',
      'win8_chromium_gn_dbg': 'gn_debug_bot_minimal_symbols_x86',
      'win8_chromium_gn_rel': 'gn_release_trybot_x86',
      'win8_chromium_gn_upload': 'gn_release_bot_minimal_symbols_x86',
      'win_clang_x64_dbg': 'win_clang_debug_bot',
    },
    'tryserver.v8': {
      'v8_linux_chromium_gn_rel': 'gn_release_trybot',
      'v8_android_chromium_gn_dbg': 'android_gn_debug_bot',
    },
  },
}
