# e.g. RolloverProtectedTickClock
fun:*MutableInstance*

# WTF allocators.
fun:*allocate*Backing*

# WTF::ThreadSpecific
fun:*ThreadSpecific*

# Mesa contains several bad casts.
src:*third_party/mesa*

# Deliberate bad cast to derived class to hide functions.
type:*BlockIUnknownMethods*
type:*BlockRefType*
type:*SkAutoTUnref*
type:*SkBlockComRef*
# https://crbug.com/517959
type:*NoAddRefRelease*

# invalid downcasts for IPC messages
# https://crbug.com/520760
src:*nacl_message_scanner.cc*

# src/base/win/event_trace_provider_unittest.cc
type:*EtwTraceProvider*

# These classes are used to communicate between chrome.exe and
# chrome_child.dll (see src/sandbox/win/src/sandbox.h,
# src/chrome/app/chrome_main.cc).
type:sandbox::BrokerServices
type:sandbox::TargetPolicy
type:sandbox::TargetServices

# Likewise (base/win/scoped_handle.cc).
type:*ActiveVerifier*

#############################################################################
# Base class's constructor accesses a derived class.

fun:*DoublyLinkedListNode*

# RenderFrameObserverTracker<T>::RenderFrameObserverTracker()
fun:*content*RenderFrameObserverTracker*RenderFrame*

# RenderViewObserverTracker<T>::RenderViewObserverTracker()
fun:*content*RenderViewObserverTracker*RenderView*

fun:*RefCountedGarbageCollected*makeKeepAlive*
fun:*ThreadSafeRefCountedGarbageCollected*makeKeepAlive*

#############################################################################
# Base class's destructor accesses a derived class.

fun:*DatabaseContext*contextDestroyed*

# FIXME: Cannot handle template function LifecycleObserver<>::setContext,
# so exclude source file for now. 
src:*LifecycleObserver.h*

# Blink wtf::Vector cast on non-initialized data
# https://crbug.com/568891
src:*wtf/Vector.h*
src:*wtf/PartitionAllocator.h*

#############################################################################
# Methods disabled due to perf considerations.

# Skia

# https://crbug.com/638064#c1
fun:*SkPictureUtils*ApproximateBytesUsed*

# https://crbug.com/638056#c1
fun:*SkCanvas*onDrawRect*

# https://crbug.com/638064
fun:*SkCanvas*drawPicture*

# https://crbug.com/638060
fun:*SkCanvas*onDrawPicture*

# https://crbug.com/638064#c2
fun:*SkBaseDevice*accessPixels*

# https://crbug.com/638056
fun:*call_hline_blitter*
fun:*do_scanline*
fun:*antifilldot8*

# Unclear what could be done here
fun:*SkCanvas*drawRect*
fun:*SkPictureGpuAnalyzer*analyzePicture*
fun:*SkScalerContext*MakeRec*

# V8

# https://crbug.com/638056
fun:*VisitorAdapter*VisitEmbedderReference*
fun:*GlobalHandles*IterateWeakRoots*
fun:*GlobalHandles*IterateObjectGroups*
fun:*GlobalHandles*IterateAllRoots*
fun:*GlobalHandles*IterateAllRootsWithClassIds*
fun:*GlobalHandles*IterateAllRootsInNewSpaceWithClassIds*
fun:*GlobalHandles*IterateWeakRootsInNewSpaceWithClassIds*
fun:*SerializerDeserializer*Iterate*

# Unclear what could be done here
fun:*BodyDescriptorBase*IteratePointers*

# CC

# https://crbug.com/638045
fun:*WebLayerImpl*invalidateRect*

# https://crbug.com/638056
fun:*DisplayItemList*Raster*
fun:*DisplayItemList*ApproximateMemoryUsage*
fun:*LayerTreeHost*SetNeedsAnimate*
fun:*LayerTreeHost*NotifySwapPromiseMonitorsOfSetNeedsCommit*
fun:*LayerTreeHost*SetNeedsUpdateLayers*

# https://crbug.com/638060
fun:*DrawingDisplayItem*Raster*

# https://crbug.com/638064
fun:*DrawingDisplayItem*ApproximateOpCount*

# WebKit
# The entries below have not been categorized

# blink::BoxClipper::BoxClipper
fun:*blink*BoxClipper*LayoutBox*PaintInfo*LayoutPoint*ContentsClipBehavior*

# blink::DrawingDisplayItem::DrawingDisplayItem
fun:*blink*DrawingDisplayItem*DisplayItemClient*

# cc::DisplayItemList::Inputs::~Inputs
fun:*cc*DisplayItemList*Inputs*

# StyleAttributeMutationScope::StyleAttributeMutationScope
fun:*StyleAttributeMutationScope*AbstractPropertySetCSSStyleDeclaration*

# StyleAttributeMutationScope::~StyleAttributeMutationScope
fun:*StyleAttributeMutationScopeD2Ev*

fun:*AbstractPropertySetCSSStyleDeclaration*contextStyleSheet*
fun:*AbstractPropertySetCSSStyleDeclaration*setPropertyInternal*
fun:*ComputeFloatOffsetAdapter*collectIfNeeded*
fun:*ContainerNode*isChildTypeAllowed*
fun:*ContainerNode*checkAcceptChild*
fun:*ContainerNode*notifyNodeInserted*
fun:*ContainerNode*attachLayoutTree*
fun:*ContainerNode*notifyNodeInsertedInternal*
fun:*SharedStyleFinder*canShareStyleWithElement*
fun:*ElementRuleCollector*collectMatchingRules*
fun:*Element*attributeChanged*
fun:*Element*didAddAttribute*
fun:*HTMLElement*offsetHeightForBinding*
fun:*LayoutTreeBuilderForElement*shouldCreateLayoutObject*
fun:*LayoutTreeBuilderForElement*createLayoutObject*
fun:*EventTarget*hasEventListeners*
fun:*HTMLCollection*invalidateCacheForAttribute*
fun:*InlineBox*destroy*
fun:*InlineBox*moveInLogicalDirection*
fun:*InlineFlowBox*setConstructed*
fun:*LayoutBlock*createsNewFormattingContext*
fun:*LayoutBlock*computeChildPreferredLogicalWidth*
fun:*LayoutBlock*computePreferredLogicalWidths*
fun:*LayoutBlock*computeOverflow*
fun:*LayoutBlock*logicalLeftOffsetForContent*
fun:*LayoutBlock*marginAfterForChild*
fun:*LayoutBlock*marginBeforeForChild*
fun:*LayoutBlock*marginStartForChild*
fun:*LayoutBlock*updateLogicalWidthAndColumnWidth*
fun:*LayoutBlockFlow*computeInlinePreferredLogicalWidths*
fun:*LayoutBlockFlow*determineLogicalLeftPositionForChild*
fun:*LayoutBlockFlow*layoutBlockFlow*
fun:*LayoutBlockFlow*layoutInlineChildren*
fun:*LayoutBlockFlow*marginBeforeEstimateForChild*
fun:*LayoutBlockFlow*rebuildFloatsFromIntruding*
fun:*LayoutBlockFlow*yPositionForFloatIncludingMargin*
fun:*LayoutBlockFlow*styleDidChange*
fun:*LayoutBox*addLayoutOverflow*
fun:*LayoutBox*addOverflowFromChild*
fun:*LayoutBox*avoidsFloats*
fun:*LayoutBox*baselinePosition*
fun:*LayoutBox*clientBoxRect*
fun:*LayoutBox*clientHeight*
fun:*LayoutBox*clientLeft*
fun:*LayoutBox*clientLogicalBottom*
fun:*LayoutBox*clientLogicalHeight*
fun:*LayoutBox*clientLogicalWidth*
fun:*LayoutBox*clientTop*
fun:*LayoutBox*clientWidth*
fun:*LayoutBox*computeBackgroundIsKnownToBeObscured*
fun:*LayoutBox*computeIntrinsicLogicalWidthUsing*
fun:*LayoutBox*computeLogicalHeight*
fun:*LayoutBox*computeLogicalWidthUsing*
fun:*LayoutBox*contentBoxRect*
fun:*LayoutBox*contentHeight*
fun:*LayoutBox*contentWidth*
fun:*LayoutBox*hasAutoHorizontalScrollbar*
fun:*LayoutBox*hasAutoVerticalScrollbar*
fun:*LayoutBox*hasUnsplittableScrollingOverflow*
fun:*LayoutBox*layoutOverflowRectForPropagation*
fun:*LayoutBox*logicalLayoutOverflowRectForPropagation*
fun:*LayoutBox*maxPreferredLogicalWidth*
fun:*LayoutBox*noOverflowRect*
fun:*LayoutBox*pixelSnappedOffsetHeight*
fun:*LayoutBox*scrollsOverflow*
fun:*LayoutBox*shrinkToAvoidFloats*
fun:*LayoutBox*updateLogicalHeight*
fun:*LayoutBox*visualOverflowRectForPropagation*
fun:*LayoutBoxModelObject*borderAndPaddingHeight*
fun:*LayoutBoxModelObject*borderAndPaddingWidth*
fun:*LayoutBoxModelObject*borderAndPaddingBefore*
fun:*LayoutBoxModelObject*borderAndPaddingAfter*
fun:*LayoutBoxModelObject*borderAndPaddingLogicalHeight*
fun:*LayoutBoxModelObject*borderAndPaddingLogicalWidth*
fun:*LayoutBoxModelObject*borderAndPaddingLogicalLeft*
fun:*LayoutBoxModelObject*marginHeight*
fun:*LayoutBoxModelObject*marginWidth*
fun:*LayoutBoxModelObject*marginLogicalHeight*
fun:*LayoutBoxModelObject*marginLogicalWidth*
fun:*LayoutBoxModelObject*styleDidChange*
fun:*LayoutBoxModelObject*invalidateTreeIfNeeded*
fun:*LayoutFlexibleBox*adjustChildSizeForMinAndMax*
fun:*LayoutFlexibleBox*childIntrinsicLogicalHeight*
fun:*LayoutFlexibleBox*clientLogicalBottomAfterRepositioning*
fun:*LayoutFlexibleBox*computeInnerFlexBaseSizeForChild*
fun:*LayoutFlexibleBox*constructFlexItem*
fun:*LayoutFlexibleBox*flowAwareBorderAfter*
fun:*LayoutFlexibleBox*flowAwareMarginBeforeForChild*
fun:*LayoutFlexibleBox*flowAwareMarginEndForChild*
fun:*LayoutFlexibleBox*flowAwareMarginStartForChild*
fun:*LayoutFlexibleBox*flowAwarePaddingAfter*
fun:*LayoutFlexibleBox*layoutAndPlaceChildren*
fun:*LayoutFlexibleBox*marginBoxAscentForChild*
fun:*LayoutGrid*maxContentForChild*
fun:*LayoutGrid*minContentForChild*
fun:*LayoutGrid*updateAutoMarginsInColumnAxisIfNeeded*
fun:*LayoutGrid*updateAutoMarginsInRowAxisIfNeeded*
fun:*LayoutObject*addChild*
fun:*LayoutObject*backgroundIsKnownToBeObscured*
fun:*LayoutObject*canHaveChildren*
fun:*LayoutObject*invalidatePaintIfNeeded*
fun:*LayoutObject*invalidatePaintOfPreviousPaintInvalidationRect*
fun:*LayoutObject*invalidatePaintOfSubtreesIfNeeded*
fun:*LayoutObject*insertedIntoTree*
fun:*LayoutObject*layoutIfNeeded*
fun:*LayoutObject*removeShapeImageClient*
fun:*LayoutObject*setStyle*
fun:*LayoutObject*slowFirstChild*
fun:*LayoutObjectChildList*insertChildNode*
fun:*Node*isAfterPseudoElement*
fun:*Node*isBeforePseudoElement*
fun:*Node*isFirstLetterPseudoElement*
fun:*Node*isPseudoElement*
fun:*Node*wrap*
fun:*PaintInvalidationState*computePaintInvalidationRectInBacking*
fun:*FrameTree*parent*
fun:*FrameTree*traverseNext*
fun:*PageAnimator*scheduleVisualUpdate*
fun:*BlockPainter*paint*
fun:*BlockPainter*paintObject*
fun:*BlockPainter*intersectsPaintRect*
fun:*ObjectPaintInvalidator*computePaintInvalidationReason*
fun:*ObjectPaintInvalidator*invalidateSelectionIfNeeded*
fun:*ObjectPaintInvalidator*invalidatePaintIfNeededWithComputedReason*
fun:*StyleResolver*matchAllRules*
fun:*ContiguousContainer*clear*
fun:*GraphicsLayer*setNeedsDisplayInRect*
fun:*PaintArtifact*appendToWebDisplayItemList*
fun:*visualRectForDisplayItem*
fun:*PaintController*commitNewDisplayItems*
fun:*AdjustAndMarkTrait**mark*
fun:*TraceTrait**trace*
fun:*ChromeClientImpl*scheduleAnimation*
fun:*blink*PODIntervalTree*searchForOverlapsFrom*
fun:*borderPaddingWidthForBoxSizing*
fun:*hasAspectRatio*
fun:*nextBreakablePosition*
fun:*shouldBeConsideredAsReplaced*
fun:*supportsCachedOffsets*
fun:*traceImpl*
