# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chrome_build.gni")

# NB: This is a deprecated vector icon target that should be removed. Add vector
# icons to a more specific target, or ui/vector_icons if ui/ is the right place
# for them. TODO(estade): remove this target.
action("aggregate_vector_icons") {
  visibility = [ ":*" ]

  script = "aggregate_vector_icons.py"

  icons = [
    "business.icon",
    "check_circle.1x.icon",
    "check_circle.icon",
    "default_favicon.icon",
    "eol.icon",
    "fullscreen.icon",
    "help_outline.icon",
    "info_outline.icon",
    "notifications.icon",
    "notifications_off.icon",

    # TODO(estade): this is the same as the one in components/omnibox, but it's
    # referenced from Ash. De-dupe this soon.
    "omnibox_search.icon",
    "pdf.1x.icon",
    "pdf.icon",
    "warning.icon",
    "web.icon",
  ]

  if (is_mac) {
    icons += [ "google_search_mac_touchbar.icon" ]
  }

  output_cc = "$target_gen_dir/vector_icons.cc"
  output_h = "$target_gen_dir/vector_icons.h"

  inputs = icons
  inputs += [
    "vector_icons.cc.template",
    "vector_icons.h.template",
  ]
  outputs = [
    output_cc,
    output_h,
  ]

  response_file_contents = rebase_path(icons, root_build_dir)

  args = [
    "--working_directory=" + rebase_path("./"),
    "--file_list={{response_file_name}}",
    "--output_cc=" + rebase_path(output_cc, root_build_dir),
    "--output_h=" + rebase_path(output_h, root_build_dir),
    "--use_legacy_template",
  ]
}

source_set("vector_icons") {
  sources = get_target_outputs(":aggregate_vector_icons")
  sources += [
    "../vector_icon_types.h",
    "../vector_icons_public.h",
  ]

  deps = [
    ":aggregate_vector_icons",
    "//base",
    "//skia",
  ]
}
