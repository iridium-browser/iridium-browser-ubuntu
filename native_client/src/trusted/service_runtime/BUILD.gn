# Copyright (c) 2014 The Native ClientAuthors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

static_library("sel_main") {
  sources = [
    "sel_main.c",
  ]
  deps = [
    "//native_client/build/config/nacl:nacl_base",
    "//native_client/src/trusted/debug_stub:debug_stub",
    ":sel",
  ]
}

static_library("sel_main_chrome") {
  sources = [
    "sel_main_chrome.c",
  ]
  deps = [
    "//native_client/build/config/nacl:nacl_base",
    "//native_client/src/trusted/debug_stub:debug_stub",
    ":sel",
  ]
}

static_library("env_cleanser") {
  sources = [
    "env_cleanser.c",
  ]
  deps = [
    "//native_client/build/config/nacl:nacl_base",
  ]
}

static_library("nacl_error_code") {
  sources = [
    "nacl_error_code.c",
  ]
  deps = [
    "//native_client/build/config/nacl:nacl_base",
  ]
}

static_library("sel") {
  sources = [
    "dyn_array.c",
    "elf_util.c",
    "load_file.c",
    "nacl_all_modules.c",
    "nacl_app_thread.c",
    "nacl_copy.c",
    "nacl_desc_effector_ldr.c",
    "nacl_error_gio.c",
    "nacl_error_log_hook.c",
    "nacl_globals.c",
    "nacl_resource.c",
    "nacl_secure_service.c",
    "nacl_signal_common.c",
    "nacl_stack_safety.c",
    "nacl_syscall_common.c",
    "nacl_syscall_hook.c",
    "nacl_syscall_list.c",
    "nacl_text.c",
    "nacl_valgrind_hooks.c",
    "sel_addrspace.c",
    "sel_ldr.c",
    "sel_ldr_standard.c",
    "sel_ldr_thread_interface.c",
    "sel_main_common.c",
    "sel_mem.c",
    "sel_qualify.c",
    "sel_validate_image.c",
    "sys_exception.c",
    "sys_fdio.c",
    "sys_filename.c",
    "sys_futex.c",
    "sys_imc.c",
    "sys_list_mappings.c",
    "sys_memory.c",
    "sys_parallel_io.c",
    "sys_random.c",
    "thread_suspension_common.c",
    "thread_suspension_unwind.c",
  ]

  if (current_os == "linux") {
    sources += [ "linux/nacl_signal.c" ]
  }

  if (current_os == "mac") {
    sources += [
      "osx/crash_filter.c",
      "osx/mach_exception_handler.c",
      "osx/mach_thread_map.c",
      "osx/nacl_ldt.c",
      "osx/nacl_thread_nice.c",
      "osx/outer_sandbox.c",
      "osx/thread_suspension.c",
      "posix/addrspace_teardown.c",
      "posix/sel_memory.c",
      "posix/x86/sel_segments.c",
    ]
  }
  if (current_os == "win") {
    sources += [
      "win/addrspace_teardown.c",
      "win/debug_exception_handler.c",
      "win/debug_exception_handler_standalone.c",
      "win/nacl_ldt.c",
      "win/nacl_thread_nice.c",
      "win/sel_memory.c",
      "win/sel_segments.c",
      "win/thread_handle_map.c",
    ]
  }

  if (current_cpu == "arm") {
    sources += [
      "arch/arm/nacl_app.c",
      "arch/arm/nacl_switch_to_app_arm.c",
      "arch/arm/sel_rt.c",
      "arch/arm/nacl_tls.c",
      "arch/arm/sel_ldr_arm.c",
      "arch/arm/sel_addrspace_arm.c",
      "arch/arm/nacl_switch.S",
      "arch/arm/nacl_syscall.S",
      "arch/arm/tramp_arm.S",
      "linux/nacl_signal_arm.c",
    ]
  }
  if (current_cpu == "mipsel") {
    sources += [
      "arch/mips/nacl_app.c",
      "arch/mips/nacl_switch.S",
      "arch/mips/nacl_switch_to_app_mips.c",
      "arch/mips/nacl_syscall.S",
      "arch/mips/nacl_tls.c",
      "arch/mips/sel_addrspace_mips.c",
      "arch/mips/sel_ldr_mips.c",
      "arch/mips/sel_rt.c",
      "arch/mips/tramp_mips.S",
      "linux/nacl_signal_mips.c",
    ]
  }
  if (current_os == "linux" || current_os == "android") {
    sources += [
      "linux/nacl_bootstrap_args.c",
      "linux/nacl_thread_nice.c",
      "linux/r_debug.c",
      "linux/reserved_at_zero.c",
      "linux/thread_suspension.c",
      "posix/addrspace_teardown.c",
      "posix/sel_memory.c",
    ]
    if (current_cpu == "x86" || current_cpu == "x64") {
      sources += [
        "linux/x86/nacl_ldt.c",
        "posix/x86/sel_segments.c",
      ]
    }
    if (current_cpu == "arm") {
      sources += [ "linux/arm/sel_segments.c" ]
    }
    if (current_cpu == "mipsel") {
      sources += [ "linux/mips/sel_segments.c" ]
    }
  }
  if (is_posix) {
    sources += [
      "posix/nacl_signal_stack.c",
      "posix/nacl_syscall_impl.c",
      "posix/sel_addrspace_posix.c",
    ]
  }

  if (is_win) {
    sources += [
      "win/nacl_signal_stack.c",
      "win/nacl_syscall_impl.c",
      "win/sel_addrspace_win.c",
      "win/thread_suspension.c",
      "win/vm_hole.c",
    ]
  } else {
    sources += [ "generic/vm_hole.c" ]
  }

  deps = [
    "//native_client/build/config/nacl:nacl_base",
    "//native_client/src/trusted/service_runtime:nacl_error_code",
    "//native_client/src/trusted/service_runtime:env_cleanser",
    "//native_client/src/trusted/simple_service:simple_service",
    "//native_client/src/trusted/threading:thread_interface",
    "//native_client/src/shared/srpc:nonnacl_srpc",
    "//native_client/src/trusted/desc:nrd_xfer",
    "//native_client/src/trusted/perf_counter:nacl_perf_counter",
    "//native_client/src/trusted/nacl_base:nacl_base",
    "//native_client/src/shared/imc:imc",
    "//native_client/src/trusted/fault_injection:nacl_fault_inject",
    "//native_client/src/trusted/interval_multiset:nacl_interval",
    "//native_client/src/shared/platform:platform",
    "//native_client/src/trusted/platform_qualify:platform_qual_lib",
    "//native_client/src/shared/gio:gio",
    "//native_client/src/trusted/validator:validation_cache",
    "//native_client/src/trusted/validator:validators",
  ]
  if (current_cpu == "x86") {
    deps += [
      "//native_client/src/trusted/service_runtime/arch/x86:service_runtime_x86_common",
      "//native_client/src/trusted/service_runtime/arch/x86_32:service_runtime_x86_32",
    ]
  }
  if (current_cpu == "x64") {
    deps += [
      "//native_client/src/trusted/service_runtime/arch/x86:service_runtime_x86_common",
      "//native_client/src/trusted/service_runtime/arch/x86_64:service_runtime_x86_64",
    ]
  }
}

executable("sel_ldr") {
  sources = [
    "nacl_test_injection_main.c",
  ]
  deps = [
    "//native_client/src/trusted/service_runtime:sel_main",
  ]
  if (is_posix) {
    libs = [ "rt" ]
    ldflags = [ "-pie" ]
  }
  if (is_linux) {
    datadeps = [
      "//native_client/src/trusted/service_runtime/linux:munge_nacl_helper_bootstrap",
    ]
  }
}
