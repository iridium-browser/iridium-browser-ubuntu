{%- import "interface_macros.tmpl" as interface_macros %}
class {{export_attribute}} {{interface.name}}Proxy
    : public {{interface.name}} {
 public:
  explicit {{interface.name}}Proxy(mojo::MessageReceiverWithResponder* receiver);

{%- for method in interface.methods %}
{%-   if method.sync %}
  bool {{method.name}}({{interface_macros.declare_sync_method_params("", method)}}) override;
{%-   endif %}
  void {{method.name}}({{interface_macros.declare_request_params("", method, use_once_callback)}}) override;
{%- endfor %}

  void set_group_controller(
        scoped_refptr<mojo::AssociatedGroupController> group_controller) {
    group_controller_ = std::move(group_controller);
  }
 private:
  mojo::MessageReceiverWithResponder* receiver_;
  scoped_refptr<mojo::AssociatedGroupController> group_controller_;
};
