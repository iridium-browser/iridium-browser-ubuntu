// static
{{struct.name}}Ptr {{struct.name}}::New() {
  {{struct.name}}Ptr rv;
  mojo::internal::StructHelper<{{struct.name}}>::Initialize(&rv);
  return rv;
}

{{struct.name}}::{{struct.name}}()
{%- for field in struct.fields %}
    {% if loop.first %}:{% else %} {% endif %} {{field.name}}({{field|default_value}}){% if not loop.last %},{% endif %}
{%- endfor %} {
}

{{struct.name}}::~{{struct.name}}() {
}

{%- if struct|is_hashable %}
size_t {{struct.name}}::Hash(size_t seed) const {
{%-   for field in struct.fields %}
{%-     if for_blink %}
  seed = mojo::internal::WTFHash(seed, this->{{field.name}});
{%-     else %}
  seed = mojo::internal::Hash(seed, this->{{field.name}});
{%-     endif %}
{%-   endfor %}
  return seed;
}
{%- endif %}
