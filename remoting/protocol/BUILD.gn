# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//remoting/remoting_srcs.gni")

source_set("protocol") {
  sources = rebase_path(remoting_srcs_gypi_values.remoting_protocol_sources,
                        ".",
                        "//remoting")

  configs += [
    "//build/config/compiler:no_size_t_to_int_warning",
    "//build/config/compiler:wexit_time_destructors",
  ]

  public_deps = [
    "//remoting/proto",
    "//third_party/libjingle",
  ]
  deps = [
    "//base",
    "//crypto",
    "//jingle:jingle_glue",
    "//jingle:notifier",
    "//net",
    "//remoting/base",
    "//remoting/codec",
  ]
}

source_set("test_support") {
  testonly = true

  sources = [
    "fake_authenticator.cc",
    "fake_authenticator.h",
    "fake_connection_to_host.cc",
    "fake_connection_to_host.h",
    "fake_datagram_socket.cc",
    "fake_datagram_socket.h",
    "fake_session.cc",
    "fake_session.h",
    "fake_stream_socket.cc",
    "fake_stream_socket.h",
    "protocol_mock_objects.cc",
    "protocol_mock_objects.h",
  ]

  public_deps = [
    ":protocol",
    "//testing/gmock",
  ]
}

source_set("unit_tests") {
  testonly = true

  sources = [
    "authenticator_test_base.cc",
    "authenticator_test_base.h",
    "channel_multiplexer_unittest.cc",
    "chromium_socket_factory_unittest.cc",
    "client_video_dispatcher_unittest.cc",
    "clipboard_echo_filter_unittest.cc",
    "clipboard_filter_unittest.cc",
    "connection_tester.cc",
    "connection_tester.h",
    "connection_to_client_unittest.cc",
    "content_description_unittest.cc",
    "input_event_tracker_unittest.cc",
    "input_filter_unittest.cc",
    "jingle_messages_unittest.cc",
    "jingle_session_unittest.cc",
    "message_decoder_unittest.cc",
    "message_reader_unittest.cc",
    "monitored_video_stub_unittest.cc",
    "mouse_input_filter_unittest.cc",
    "negotiating_authenticator_unittest.cc",
    "pairing_registry_unittest.cc",
    "ppapi_module_stub.cc",
    "ssl_hmac_channel_authenticator_unittest.cc",
    "third_party_authenticator_unittest.cc",
    "v2_authenticator_unittest.cc",
  ]

  deps = [
    ":test_support",
    "//testing/gmock",
    "//testing/gtest",
  ]
}
