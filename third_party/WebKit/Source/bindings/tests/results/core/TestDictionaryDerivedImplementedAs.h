// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by code_generator_v8.py.
// DO NOT MODIFY!

// This file has been generated from the Jinja2 template in
// third_party/WebKit/Source/bindings/templates/dictionary_impl.h.tmpl

// clang-format off
#ifndef TestDictionaryDerivedImplementedAs_h
#define TestDictionaryDerivedImplementedAs_h

#include "bindings/core/v8/StringOrDouble.h"
#include "bindings/tests/idls/core/TestDictionary.h"
#include "core/CoreExport.h"
#include "platform/heap/Handle.h"
#include "wtf/Vector.h"
#include "wtf/text/WTFString.h"

namespace blink {

class CORE_EXPORT TestDictionaryDerivedImplementedAs : public TestDictionary {
  DISALLOW_NEW_EXCEPT_PLACEMENT_NEW();
 public:
  TestDictionaryDerivedImplementedAs();
  virtual ~TestDictionaryDerivedImplementedAs();
  TestDictionaryDerivedImplementedAs(const TestDictionaryDerivedImplementedAs&);
  TestDictionaryDerivedImplementedAs& operator=(const TestDictionaryDerivedImplementedAs&);

  bool hasDerivedStringMember() const;
  String derivedStringMember() const;
  void setDerivedStringMember(String);

  bool hasDerivedStringMemberWithDefault() const;
  String derivedStringMemberWithDefault() const;
  void setDerivedStringMemberWithDefault(String);

  bool hasRequiredLongMember() const;
  int requiredLongMember() const;
  void setRequiredLongMember(int);

  bool hasStringOrDoubleSequenceMember() const;
  const HeapVector<StringOrDouble>& stringOrDoubleSequenceMember() const;
  void setStringOrDoubleSequenceMember(const HeapVector<StringOrDouble>&);

  v8::Local<v8::Value> toV8Impl(v8::Local<v8::Object>, v8::Isolate*) const override;
  DECLARE_VIRTUAL_TRACE();

 private:
  String m_derivedStringMember;
  String m_derivedStringMemberWithDefault;
  bool m_hasRequiredLongMember = false;
  int m_requiredLongMember;
  bool m_hasStringOrDoubleSequenceMember = false;
  HeapVector<StringOrDouble> m_stringOrDoubleSequenceMember;

  friend class V8TestDictionaryDerivedImplementedAs;
};

}  // namespace blink

#endif  // TestDictionaryDerivedImplementedAs_h
