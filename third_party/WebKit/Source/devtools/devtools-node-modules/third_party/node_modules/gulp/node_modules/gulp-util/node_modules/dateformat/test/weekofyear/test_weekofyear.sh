#!/bin/bash

# (c) 2007-2009 Steven Levithan <stevenlevithan.com>

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# this just takes php's date() function as a reference to check if week of year
# is calculated correctly in the range from 1970 .. 2038 by brute force...

SEQ="seq"
SYSTEM=`uname`
if [ "$SYSTEM" = "Darwin" ]; then
	SEQ="jot"
fi

for YEAR in {1970..2038}; do
  for MONTH in {1..12}; do
    DAYS=$(cal $MONTH $YEAR | egrep "28|29|30|31" |tail -1 |awk '{print $NF}')
    for DAY in $( $SEQ $DAYS ); do
      DATE=$YEAR-$MONTH-$DAY
      echo -n $DATE ...
      NODEVAL=$(node test_weekofyear.js $DATE)
      PHPVAL=$(php -r "echo intval(date('W', strtotime('$DATE')));")
      if [ "$NODEVAL" -ne "$PHPVAL" ]; then
        echo "MISMATCH: node: $NODEVAL vs php: $PHPVAL for date $DATE"
      else
        echo " OK"
      fi
    done
  done
done
