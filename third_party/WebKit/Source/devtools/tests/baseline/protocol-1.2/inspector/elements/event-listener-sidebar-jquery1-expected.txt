Tests event listeners output in the Elements sidebar panel.

Inspect Me

======== click ========
== frameworkUser
[expanded] button#nodeRemoveevent-listener-sidebar-jquery1.html:11
    useCapture: true
    passive: false
    once: false
    handler: function (){ console.log("second jquery"); }
== frameworkUser
[expanded] button#nodeRemoveevent-listener-sidebar-jquery1.html:10
    useCapture: true
    passive: false
    once: false
    handler: function (){ console.log("first jquery"); }
== normal
[expanded] button#nodeRemoveevent-listener-sidebar-jquery1.html:12
    useCapture: false
    passive: false
    once: undefined
    handler: function () { console.log("addEventListener"); }
== frameworkInternal
[expanded] button#nodeRemovejquery-1.11.3.min.js:4
    useCapture: false
    passive: false
    once: undefined
    handler: function (a){return typeof m===K||a&&m.event.triggered===a.type?void 0:m.event.dispatch.apply(k.elem,arguments)}

======== load ========
== normal
[expanded] WindowRemoveevent-listener-sidebar-jquery1.html:36
    useCapture: false
    passive: false
    once: undefined
    handler: function onload(event) {
  onloadHandler()
}

