CONSOLE MESSAGE: line 27: Injecting in main world: this should fail.
CONSOLE ERROR: Refused to execute inline script because it violates the following Content Security Policy directive: "script-src 'self' 'unsafe-eval'". Either the 'unsafe-inline' keyword, a hash ('sha256-09Et_dqtUwF1zPoVDKo5ZDj2NUXqkLUxcQfh9UtQQt0='), or a nonce ('nonce-...') is required to enable inline execution.

CONSOLE MESSAGE: line 31: Injecting into isolated world without bypass: this should fail.
CONSOLE ERROR: Refused to execute inline script because it violates the following Content Security Policy directive: "script-src 'self' 'unsafe-eval'". Either the 'unsafe-inline' keyword, a hash ('sha256-weyW8ZEkQAD8it2iIcRJESCAdVG_APiGxF6JYEqMvKo='), or a nonce ('nonce-...') is required to enable inline execution.

CONSOLE MESSAGE: line 35: Starting to bypass main world's CSP: this should pass!
CONSOLE MESSAGE: line 1: EXECUTED in isolated world.
CONSOLE MESSAGE: line 40: Injecting into main world again: this should fail.
CONSOLE ERROR: Refused to execute inline script because it violates the following Content Security Policy directive: "script-src 'self' 'unsafe-eval'". Either the 'unsafe-inline' keyword, a hash ('sha256-09Et_dqtUwF1zPoVDKo5ZDj2NUXqkLUxcQfh9UtQQt0='), or a nonce ('nonce-...') is required to enable inline execution.

This test ensures that scripts run in isolated worlds marked with their own Content Security Policy aren't affected by the page's content security policy. Extensions, for example, should be able to inject inline JavaScript (even though it's probably a bad idea to do so).
