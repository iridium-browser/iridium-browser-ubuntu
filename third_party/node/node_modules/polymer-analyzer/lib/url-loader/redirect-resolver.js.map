{"version":3,"sources":["url-loader/redirect-resolver.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG;;AAIH,iDAA2C;AAE3C;;GAEG;AACH,sBAA8B,SAAQ,0BAAW;IAC/C,YAAoB,aAAqB,EAAU,WAAmB;QACpE,KAAK,EAAE,CAAC;QADU,kBAAa,GAAb,aAAa,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAQ;IAEtE,CAAC;IAED,UAAU,CAAC,GAAuB;QAChC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC5C,CAAC;IAED,OAAO,CAAC,GAAuB;QAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,IAAI,KAAK,CACX,qCAAqC,GAAG,SAAS;gBACjD,IAAI,IAAI,CAAC,aAAa,UAAU,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QAC3D,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,eAAe,CACvB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;IAC/D,CAAC;CACF;AAlBD,4CAkBC","file":"redirect-resolver.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {PackageRelativeUrl, ResolvedUrl} from '../model/url';\n\nimport {UrlResolver} from './url-resolver';\n\n/**\n * Resolves a URL having one prefix to another URL with a different prefix.\n */\nexport class RedirectResolver extends UrlResolver {\n  constructor(private _redirectFrom: string, private _redirectTo: string) {\n    super();\n  }\n\n  canResolve(url: PackageRelativeUrl): boolean {\n    return url.startsWith(this._redirectFrom);\n  }\n\n  resolve(url: PackageRelativeUrl): ResolvedUrl {\n    if (!this.canResolve(url)) {\n      throw new Error(\n          `RedirectResolver cannot resolve: \"${url}\" from:` +\n          `\"${this._redirectFrom}\" to: \"${this._redirectTo}\"`);\n    }\n    return this.brandAsResolved(\n        this._redirectTo + url.slice(this._redirectFrom.length));\n  }\n}\n"]}