{"version":3,"sources":["url-loader/url-loader.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;GAYG","file":"url-loader.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {PackageRelativeUrl, ResolvedUrl} from '../model/url';\n\n/**\n * An object that reads files.\n */\nexport interface UrlLoader {\n  /**\n   * Returns `true` if this loader can load the given `url`.\n   */\n  canLoad(url: ResolvedUrl): boolean;\n\n  /**\n   * Reads a file from `url`.\n   *\n   * This should only be called if `canLoad` returns `true` for `url`.\n   */\n  load(url: ResolvedUrl): Promise<string>;\n\n  /**\n   * Lists files in a directory in the current project.\n   *\n   * @param path A relative path to a directory to read.\n   * @param deep If true, lists files recursively. Returned paths are\n   *     relative to `url`.\n   */\n  readDirectory?\n      (path: ResolvedUrl, deep?: boolean): Promise<PackageRelativeUrl[]>;\n}\n"]}