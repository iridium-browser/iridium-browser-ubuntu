{"version":3,"sources":["model/import.ts"],"names":[],"mappings":"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","file":"import.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {resolve as resolveUrl} from 'url';\n\nimport {Document} from './document';\nimport {Feature} from './feature';\nimport {SourceRange} from './model';\nimport {Resolvable} from './resolvable';\nimport {FileRelativeUrl, PackageRelativeUrl, ResolvedUrl} from './url';\nimport {Severity, Warning} from './warning';\n\n\n/**\n * Represents an import, such as an HTML import, an external script or style\n * tag, or an JavaScript import.\n *\n * @template N The AST node type\n */\nexport class ScannedImport implements Resolvable {\n  type: 'html-import'|'html-script'|'html-style'|'js-import'|string;\n\n  /**\n   * URL of the import, relative to the base directory.\n   */\n  url: PackageRelativeUrl;\n\n  sourceRange: SourceRange|undefined;\n\n  error: {message?: string}|undefined;\n\n  /**\n   * The source range specifically for the URL or reference to the imported\n   * resource.\n   */\n  urlSourceRange: SourceRange|undefined;\n\n  astNode: any|null;\n\n  warnings: Warning[] = [];\n\n  /**\n   * If true, the imported document may not be loaded until well after the\n   * containing document has been evaluated, and indeed may never load.\n   */\n  lazy: boolean;\n\n  constructor(\n      type: string, url: PackageRelativeUrl, sourceRange: SourceRange|undefined,\n      urlSourceRange: SourceRange|undefined, ast: any|null, lazy: boolean) {\n    this.type = type;\n    this.url = url;\n    this.sourceRange = sourceRange;\n    this.urlSourceRange = urlSourceRange;\n    this.astNode = ast;\n    this.lazy = lazy;\n  }\n\n  resolve(document: Document): Import|undefined {\n    if (!document._analysisContext.canResolveUrl(this.url)) {\n      return;\n    }\n    const importedDocumentOrWarning = document._analysisContext.getDocument(\n        document._analysisContext.resolveUrl(this.url));\n    if (!(importedDocumentOrWarning instanceof Document)) {\n      const error = this.error ? (this.error.message || this.error) : '';\n      document.warnings.push(new Warning({\n        code: 'could-not-load',\n        message: `Unable to load import: ${error}`,\n        sourceRange: (this.urlSourceRange || this.sourceRange)!,\n        severity: Severity.ERROR,\n        parsedDocument: document.parsedDocument,\n      }));\n      return undefined;\n    }\n    return new Import(\n        document._analysisContext.resolveUrl(this.url),\n        this.type,\n        importedDocumentOrWarning,\n        this.sourceRange,\n        this.urlSourceRange,\n        this.astNode,\n        this.warnings,\n        this.lazy);\n  }\n\n  static resolveUrl(baseUrl: ResolvedUrl, localUrl: FileRelativeUrl):\n      PackageRelativeUrl {\n    return resolveUrl(baseUrl, localUrl) as PackageRelativeUrl;\n  }\n}\n\ndeclare module './queryable' {\n  interface FeatureKindMap {\n    'import': Import;\n    'lazy-import': Import;\n\n    // Import specializations.\n    'html-import': Import;\n    'html-script': Import;\n    'html-style': Import;\n    'js-import': Import;\n    'css-import': Import;\n  }\n}\n\nexport class Import implements Feature {\n  readonly type: 'html-import'|'html-script'|'html-style'|string;\n  readonly url: ResolvedUrl;\n  readonly document: Document;\n  readonly identifiers = new Set();\n  readonly kinds = new Set(['import']);\n  readonly sourceRange: SourceRange|undefined;\n  readonly urlSourceRange: SourceRange|undefined;\n  readonly astNode: any|null;\n  readonly warnings: Warning[];\n  readonly lazy: boolean;\n\n  constructor(\n      url: ResolvedUrl, type: string, document: Document,\n      sourceRange: SourceRange|undefined, urlSourceRange: SourceRange|undefined,\n      ast: any, warnings: Warning[], lazy: boolean) {\n    this.url = url;\n    this.type = type;\n    this.document = document;\n    this.kinds.add(this.type);\n    this.sourceRange = sourceRange;\n    this.urlSourceRange = urlSourceRange;\n    this.astNode = ast;\n    this.warnings = warnings;\n    this.lazy = lazy;\n    if (lazy) {\n      this.kinds.add('lazy-import');\n    }\n  }\n\n  toString() {\n    return `<Import type=\"${this.type}\" url=\"${this.url}\">`;\n  }\n}\n"]}