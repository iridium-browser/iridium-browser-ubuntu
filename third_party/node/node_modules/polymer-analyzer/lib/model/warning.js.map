{"version":3,"sources":["model/warning.ts"],"names":[],"mappings":"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","file":"warning.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport * as chalk from 'chalk';\n\nimport {Analyzer} from '../core/analyzer';\nimport {ParsedDocument} from '../parser/document';\nimport {underlineCode} from '../warning/code-printer';\n\nimport {Analysis} from './analysis';\nimport {Document} from './document';\nimport {comparePositionAndRange, isPositionInsideRange, SourceRange} from './source-range';\n\nimport stable = require('stable');\n\nexport interface WarningInit {\n  readonly message: string;\n  readonly sourceRange: SourceRange;\n  readonly severity: Severity;\n  readonly code: string;\n  readonly parsedDocument: ParsedDocument;\n  readonly fix?: Edit;\n  readonly actions?: ReadonlyArray<Action>;\n}\nexport class Warning {\n  readonly code: string;\n  readonly message: string;\n  readonly sourceRange: SourceRange;\n  readonly severity: Severity;\n\n  /**\n   * If the problem has a single automatic fix, this is it.\n   *\n   * Whether and how much something is 'automatic' can be a bit tricky to\n   * delineate. Roughly speaking, if 99% of the time the change solves the\n   * issue completely then it should go in `fix`.\n   */\n  readonly fix: Edit|undefined;\n\n  /**\n   * Other actions that could be taken in response to this warning.\n   *\n   * Each action is separate and they may be mutually exclusive. In the case\n   * of edit actions they often are.\n   */\n  readonly actions: ReadonlyArray<Action>|undefined = undefined;\n  private readonly _parsedDocument: ParsedDocument;\n\n  constructor(init: WarningInit) {\n    ({\n      message: this.message,\n      sourceRange: this.sourceRange,\n      severity: this.severity,\n      code: this.code,\n      parsedDocument: this._parsedDocument,\n    } = init);\n    this.fix = init.fix;\n    this.actions = init.actions;\n\n    if (!this.sourceRange) {\n      throw new Error(\n          `Attempted to construct a ${this.code} ` +\n          `warning without a source range.`);\n    }\n    if (!this._parsedDocument) {\n      throw new Error(\n          `Attempted to construct a ${this.code} ` +\n          `warning without a parsed document.`);\n    }\n  }\n\n  toString(options: Partial<WarningStringifyOptions> = {}): string {\n    const opts:\n        WarningStringifyOptions = {...defaultPrinterOptions, ...options};\n    const colorize = opts.color ? this._severityToColorFunction(this.severity) :\n                                  (s: string) => s;\n    const severity = this._severityToString(colorize);\n\n    let result = '';\n    if (options.verbosity !== 'one-line') {\n      const underlined =\n          underlineCode(this.sourceRange, this._parsedDocument, colorize);\n      if (underlined) {\n        result += underlined;\n      }\n      if (options.verbosity === 'code-only') {\n        return result;\n      }\n      result += '\\n\\n';\n    }\n\n    result +=\n        (`${this.sourceRange.file}` +\n         `(${this.sourceRange.start.line},${this.sourceRange.start.column}) ` +\n         `${severity} [${this.code}] - ${this.message}\\n`);\n\n    return result;\n  }\n\n  private _severityToColorFunction(severity: Severity) {\n    switch (severity) {\n      case Severity.ERROR:\n        return chalk.red;\n      case Severity.WARNING:\n        return chalk.yellow;\n      case Severity.INFO:\n        return chalk.green;\n      default:\n        const never: never = severity;\n        throw new Error(\n            `Unknown severity value - ${never}` +\n            ` - encountered while printing warning.`);\n    }\n  }\n\n  private _severityToString(colorize: (s: string) => string) {\n    switch (this.severity) {\n      case Severity.ERROR:\n        return colorize('error');\n      case Severity.WARNING:\n        return colorize('warning');\n      case Severity.INFO:\n        return colorize('info');\n      default:\n        const never: never = this.severity;\n        throw new Error(\n            `Unknown severity value - ${never} - ` +\n            `encountered while printing warning.`);\n    }\n  }\n\n  toJSON() {\n    return {\n      code: this.code,\n      message: this.message,\n      severity: this.severity,\n      sourceRange: this.sourceRange,\n    };\n  }\n}\n\nexport enum Severity {\n  ERROR,\n  WARNING,\n  INFO\n}\n\n// TODO(rictic): can we get rid of this class entirely?\nexport class WarningCarryingException extends Error {\n  readonly warning: Warning;\n  constructor(warning: Warning) {\n    super(warning.message);\n    this.warning = warning;\n  }\n}\n\nexport type Verbosity = 'one-line' | 'full' | 'code-only';\n\nexport interface WarningStringifyOptions {\n  readonly verbosity: Verbosity;\n  readonly color: boolean;\n}\nconst defaultPrinterOptions = {\n  verbosity: 'full' as 'full',\n  color: true\n};\n\n\nexport type Action = EditAction | {\n  /** To ensure that type safe code actually checks for the action kind. */\n  kind: 'never';\n};\n\n/**\n * An EditAction is like a fix, only it's not applied automatically when the\n * user runs `polymer lint --fix`. Often this is because it's less safe to\n * apply automatically, and there may be caveats, or multiple ways to resolve\n * the warning.\n *\n * For example, a change to an element that updates it to no longer use a\n * deprecated feature, but that involves a change in the element's API should\n * not be a fix, but should instead be an EditAction.\n */\nexport interface EditAction {\n  kind: 'edit';\n  /**\n   * A unique string code for the edit action. Useful so that the user can\n   * request that all actions with a given code should be applied.\n   */\n  code: string;\n  /**\n   * A short description of the change, noting caveats and important information\n   * for the user.\n   */\n  description: string;\n  edit: Edit;\n}\n\n/**\n * Represents an action for replacing a range in a document with some text.\n *\n * This is sufficient to represent all operations on text files, including\n * inserting and deleting text (using empty ranges or empty replacement\n * text, respectively).\n */\nexport interface Replacement {\n  readonly range: SourceRange;\n  readonly replacementText: string;\n}\n\n\n/**\n * A set of replacements that must all be applied as a single atomic unit.\n */\nexport type Edit = ReadonlyArray<Replacement>;\n\nexport interface EditResult {\n  /** The edits that had no conflicts, and are reflected in editedFiles. */\n  appliedEdits: Edit[];\n\n  /** Edits that could not be applied due to overlapping ranges. */\n  incompatibleEdits: Edit[];\n\n  /** A map from urls to their new contents. */\n  editedFiles: Map<string, string>;\n}\n\n/**\n * Takes the given edits and, provided there are no overlaps, applies them to\n * the contents loadable from the given loader.\n *\n * If there are overlapping edits, then edits earlier in the array get priority\n * over later ones.\n */\nexport async function applyEdits(\n    edits: Edit[], loader: (url: string) => Promise<ParsedDocument<any, any>>):\n    Promise<EditResult> {\n  const result: EditResult = {\n    appliedEdits: [],\n    incompatibleEdits: [],\n    editedFiles: new Map()\n  };\n\n  const replacementsByFile = new Map<string, Replacement[]>();\n  for (const edit of edits) {\n    if (canApply(edit, replacementsByFile)) {\n      result.appliedEdits.push(edit);\n    } else {\n      result.incompatibleEdits.push(edit);\n    }\n  }\n\n  for (const [file, replacements] of replacementsByFile) {\n    const document = await loader(file);\n    let contents = document.contents;\n    /**\n     * This is the important bit. We know that none of the replacements overlap,\n     * so in order for their source ranges in the file to all be valid at the\n     * time we apply them, we simply need to apply them starting from the end\n     * of the document and working backwards to the beginning.\n     *\n     * To preserve ordering of insertions to the same position, we use a stable\n     * sort.\n     */\n    stable.inplace(replacements, (a, b) => {\n      const leftEdgeComp =\n          comparePositionAndRange(b.range.start, a.range, true);\n      if (leftEdgeComp !== 0) {\n        return leftEdgeComp;\n      }\n      return comparePositionAndRange(b.range.end, a.range, false);\n    });\n    for (const replacement of replacements) {\n      const offsets = document.sourceRangeToOffsets(replacement.range);\n      contents = contents.slice(0, offsets[0]) + replacement.replacementText +\n          contents.slice(offsets[1]);\n    }\n    result.editedFiles.set(file, contents);\n  }\n\n  return result;\n}\n\n/**\n * We can apply an edit if none of its replacements overlap with any accepted\n * replacement.\n */\nfunction canApply(\n    edit: Edit, replacements: Map<string, Replacement[]>): boolean {\n  for (let i = 0; i < edit.length; i++) {\n    const replacement = edit[i];\n    const fileLocalReplacements =\n        replacements.get(replacement.range.file) || [];\n    // TODO(rictic): binary search\n    for (const acceptedReplacement of fileLocalReplacements) {\n      if (!areReplacementsCompatible(replacement, acceptedReplacement)) {\n        return false;\n      }\n    }\n    // Also check consistency between multiple replacements in this edit.\n    for (let j = 0; j < i; j++) {\n      const acceptedReplacement = edit[j];\n      if (!areReplacementsCompatible(replacement, acceptedReplacement)) {\n        return false;\n      }\n    }\n  }\n\n  // Ok, we can be applied to the replacements, so add our replacements in.\n  for (const replacement of edit) {\n    if (!replacements.has(replacement.range.file)) {\n      replacements.set(replacement.range.file, [replacement]);\n    } else {\n      const fileReplacements = replacements.get(replacement.range.file)!;\n      fileReplacements.push(replacement);\n    }\n  }\n  return true;\n}\n\nfunction areReplacementsCompatible(a: Replacement, b: Replacement) {\n  if (a.range.file !== b.range.file) {\n    return true;\n  }\n\n  if (areRangesEqual(a.range, b.range)) {\n    // Equal ranges are compatible if the ranges are empty (i.e. the edit is an\n    // insertion, not a replacement).\n    return (\n        a.range.start.column === a.range.end.column &&\n        a.range.start.line === a.range.end.line);\n  }\n  return !(\n      isPositionInsideRange(a.range.start, b.range, false) ||\n      isPositionInsideRange(a.range.end, b.range, false) ||\n      isPositionInsideRange(b.range.start, a.range, false) ||\n      isPositionInsideRange(b.range.end, a.range, false));\n}\n\nfunction areRangesEqual(a: SourceRange, b: SourceRange) {\n  return a.start.line === b.start.line && a.start.column === b.start.column &&\n      a.end.line === b.end.line && a.end.column === b.end.column;\n}\n\nexport function makeParseLoader(analyzer: Analyzer, analysis?: Analysis) {\n  return async(url: string) => {\n    if (analysis) {\n      const cachedResult = analysis.getDocument(url);\n      if (cachedResult instanceof Document) {\n        return cachedResult.parsedDocument;\n      }\n    }\n    const result = (await analyzer.analyze([url])).getDocument(url);\n    if (result instanceof Document) {\n      return result.parsedDocument;\n    }\n    throw new Error(`Cannot load file at:  ${url}`);\n  };\n}\n"]}