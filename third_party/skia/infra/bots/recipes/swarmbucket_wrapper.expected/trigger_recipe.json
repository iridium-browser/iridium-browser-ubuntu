[
  {
    "cmd": [
      "python",
      "-u",
      "\nimport json\nimport sys\n\nwith open(sys.argv[1]) as f:\n  content = json.load(f)\n\nprint json.dumps(content, indent=2)\n",
      "{\"buildername\": \"Some-Builder\", \"buildnumber\": 5, \"mastername\": \"client.skia.fyi\", \"path_config\": \"swarmbucket\", \"recipe\": \"swarmbucket_wrapper\", \"slavename\": \"some-slave\"}"
    ],
    "name": "print properties",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import json@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@with open(sys.argv[1]) as f:@@@",
      "@@@STEP_LOG_LINE@python.inline@  content = json.load(f)@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@print json.dumps(content, indent=2)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[B]/work",
      "511"
    ],
    "name": "makedirs workdir",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::bot_update]/resources/bot_update.py",
      "--master",
      "client.skia.fyi",
      "--builder",
      "Some-Builder",
      "--slave",
      "some-slave",
      "--spec",
      "cache_dir = '[B]/cache'\nsolutions = [{'deps_file': '.DEPS.git', 'managed': True, 'name': 'skia', 'url': 'https://skia.googlesource.com/skia.git'}]",
      "--root",
      "skia",
      "--revision_mapping_file",
      "{\"skia\": \"got_revision\"}",
      "--git-cache-dir",
      "[B]/cache",
      "--output_json",
      "/path/to/tmp/json",
      "--revision",
      "skia@origin/master"
    ],
    "cwd": "[B]/work",
    "env": {
      "PATH": "%(PATH)s:RECIPE_PACKAGE_REPO[depot_tools]"
    },
    "name": "bot_update",
    "~followup_annotations": [
      "@@@STEP_TEXT@Some step text@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"did_run\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"fixed_revisions\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"skia\": \"origin/master\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_failure\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_root\": \"skia\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"properties\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision\": \"9046e2e693bb92a76e972b694580e5d17ad10748\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision_cp\": \"refs/heads/master@{#164710}\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"root\": \"skia\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"step_text\": \"Some step text\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@got_revision@\"9046e2e693bb92a76e972b694580e5d17ad10748\"@@@",
      "@@@SET_BUILD_PROPERTY@got_revision_cp@\"refs/heads/master@{#164710}\"@@@"
    ]
  },
  {
    "allow_subannotations": true,
    "cmd": [
      "python",
      "[B]/work/skia/infra/bots/recipes.py",
      "run",
      "--workdir",
      "[B]/work",
      "swarm_trigger",
      "path_config=kitchen",
      "buildername=Some-Builder",
      "recipe=swarmbucket_wrapper",
      "mastername=client.skia.fyi",
      "buildnumber=5",
      "slavename=some-slave",
      "path_config=swarmbucket"
    ],
    "name": "run recipe"
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]