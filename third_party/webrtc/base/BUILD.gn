# Copyright (c) 2014 The WebRTC project authors. All Rights Reserved.
#
# Use of this source code is governed by a BSD-style license
# that can be found in the LICENSE file in the root of the source
# tree. An additional intellectual property rights grant can be found
# in the file PATENTS.  All contributing project authors may
# be found in the AUTHORS file in the root of the source tree.

import("//build/config/crypto.gni")
import("//build/config/ui.gni")
import("../webrtc.gni")

if (is_android) {
  import("//build/config/android/config.gni")
  import("//build/config/android/rules.gni")
}
if (is_win) {
  import("//build/config/clang/clang.gni")
}

group("base") {
  public_deps = [
    ":rtc_base",
    ":rtc_base_approved",
    ":rtc_task_queue",
    ":sequenced_task_checker",
    ":weak_ptr",
  ]
}

if (!rtc_build_ssl) {
  config("external_ssl_library") {
    assert(rtc_ssl_root != "",
           "You must specify rtc_ssl_root when rtc_build_ssl==0.")
    include_dirs = [ rtc_ssl_root ]
  }
}

# The targets below are deprecated and only exist here temporarily during
# refactoring. See https://bugs.webrtc.org/7634 for more details.

group("protobuf_utils") {
  public_deps = [ "../rtc_base:protobuf_utils" ]
}

group("compile_assert_c") {
  public_deps = [ "../rtc_base:compile_assert_c" ]
}

group("rtc_base_approved") {
  public_deps = [ "../rtc_base:rtc_base_approved" ]
}

group("rtc_task_queue") {
  public_deps = [ "../rtc_base:rtc_task_queue" ]
}

group("sequenced_task_checker") {
  public_deps = [ "../rtc_base:sequenced_task_checker" ]
}

group("weak_ptr") {
  public_deps = [ "../rtc_base:weak_ptr" ]
}

group("rtc_numerics") {
  public_deps = [ "../rtc_base:rtc_numerics" ]
}

group("rtc_json") {
  public_deps = [ "../rtc_base:rtc_json" ]
}

group("rtc_base") {
  public_deps = [ "../rtc_base:rtc_base" ]
}

group("gtest_prod") {
  public_deps = [ "../rtc_base:gtest_prod" ]
}

group("rtc_base_tests_utils") {
  testonly = true
  public_deps = [ "../rtc_base:rtc_base_tests_utils" ]
}

if (rtc_include_tests) {
  group("rtc_base_tests_main") {
    testonly = true
    public_deps = [ "../rtc_base:rtc_base_tests_main" ]
  }

  group("rtc_base_nonparallel_tests") {
    testonly = true
    public_deps = [ "../rtc_base:rtc_base_nonparallel_tests" ]
  }

  group("rtc_base_approved_unittests") {
    testonly = true
    public_deps = [ "../rtc_base:rtc_base_approved_unittests" ]
  }

  group("sequenced_task_checker_unittests") {
    testonly = true
    public_deps = [ "../rtc_base:sequenced_task_checker_unittests" ]
  }

  group("weak_ptr_unittests") {
    testonly = true
    public_deps = [ "../rtc_base:weak_ptr_unittests" ]
  }

  group("rtc_task_queue_unittests") {
    testonly = true
    public_deps = [ "../rtc_base:rtc_task_queue_unittests" ]
  }


  group("rtc_numerics_unittests") {
    testonly = true
    public_deps = [ "../rtc_base:rtc_numerics_unittests" ]
  }

  group("rtc_base_unittests") {
    testonly = true
    public_deps = [ "../rtc_base:rtc_base_unittests" ]
  }
}

if (is_android) {
  android_library("base_java") {
    java_files = [ "Dummy.java" ]  # Need one file to avoid hitting an assert.
    deps = [ "../rtc_base:base_java" ]
  }
}
