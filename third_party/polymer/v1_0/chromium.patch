diff --git a/components-chromium/font-roboto/roboto.html b/components-chromium/font-roboto/roboto.html
index 7a24999..4eefcba 100644
--- a/components-chromium/font-roboto/roboto.html
+++ b/components-chromium/font-roboto/roboto.html
@@ -7,5 +7,4 @@ The complete set of contributors may be found at http://polymer.github.io/CONTRI
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 -->
-<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:400,300,300italic,400italic,500,500italic,700,700italic">
-<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto+Mono:400,700">
+<link rel="stylesheet" href="chrome://resources/css/roboto.css">
diff --git a/components-chromium/polymer/polymer-extracted.js b/components-chromium/polymer/polymer-extracted.js
index baf9ab3..985fe6c 100644
--- a/components-chromium/polymer/polymer-extracted.js
+++ b/components-chromium/polymer/polymer-extracted.js
@@ -2444,8 +2444,7 @@ _hasMixinRules: function (rules) {
 return rules[0].selector.indexOf(this.VAR_START) >= 0;
 },
 removeCustomProps: function (cssText) {
-cssText = this.removeCustomPropAssignment(cssText);
-return this.removeCustomPropApply(cssText);
+return cssText;
 },
 removeCustomPropAssignment: function (cssText) {
 return cssText.replace(this._rx.customProp, '').replace(this._rx.mixinProp, '');
diff --git a/components-chromium/polymer/polymer-extracted.js b/components-chromium/polymer/polymer-extracted.js
index 627bdd3..7ba497c 100644
--- a/components-chromium/polymer/polymer-extracted.js
+++ b/components-chromium/polymer/polymer-extracted.js
@@ -2521,7 +2521,7 @@ AT_START: '@'
 var settings = Polymer.Settings;
 return {
 NATIVE_VARIABLES: Polymer.Settings.useNativeCSSProperties,
-MODULE_STYLES_SELECTOR: 'style, link[rel=import][type~=css], template',
+MODULE_STYLES_SELECTOR: 'style:not([no-process]), link[rel=import][type~=css], template',
 INCLUDE_ATTR: 'include',
 toCssText: function (rules, callback) {
 if (typeof rules === 'string') {
