# Copyright 2016 The SwiftShader Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Need a separate config to ensure the warnings are added to the end.
config("swiftshader_libEGL_private_config") {
  if (is_win) {
    cflags = [
      "/DEGLAPI=",
      "/DEGL_EGLEXT_PROTOTYPES",
      "/DLIBEGL_EXPORTS",
      "/wd4201",  # nameless struct/union
      "/wd4065",  # switch statement contains 'default' but no 'case' labels
    ]
  } else {
    cflags = [
      "-DLOG_TAG=\"swiftshader_libEGL\"",
      "-DEGLAPI=",
      "-DEGL_EGLEXT_PROTOTYPES",
      "-Wno-sign-compare",
    ]
  }
}

shared_library("swiftshader_libEGL") {
  if (!is_mac) {
    output_name = "libEGL"
    output_dir = "$root_out_dir/swiftshader"
  }

  sources = [
    "../common/Object.cpp",
    "Config.cpp",
    "Display.cpp",
    "EGLSurface.cpp",
    "libEGL.cpp",
    "libEGL.def",
    "libEGL.rc",
    "main.cpp",
    "resource.h",
  ]

  if (is_debug) {
    sources += [ "../common/debug.cpp" ]
  } else if (is_linux) {
    sources += [
      "../../Renderer/Surface.cpp",
      "../common/Image.cpp",
    ]
  }

  if (is_mac) {
    sources += [ "OSXUtils.mm" ]
    libs = [
      "Quartz.framework",
      "Cocoa.framework",
    ]
  } else if (is_win) {
    configs -= [ "//build/config/win:unicode" ]
    ldflags = [ "/DEF:" + rebase_path("libGLESv2.def", root_build_dir) ]
  } else if (is_linux) {
    sources += [ "../../Main/libX11.cpp" ]
  }

  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [
    "//build/config/compiler:no_chromium_code",
    "//third_party/swiftshader:swiftshader_config",
    ":swiftshader_libEGL_private_config",
  ]

  include_dirs = [
    "../../../include",
    "../..",
    "..",
  ]
}
