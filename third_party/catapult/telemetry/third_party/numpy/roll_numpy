#!/usr/bin/env python
# Copyright 2017 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

DESCRIPTION = '''\
Downloads numpy via pip, packages it as a zip, and updates \
binary_dependencies.json and Cloud Storage with the result.'''

import argparse
import glob
import os
import shutil
import sys
import virtualenv

# Catapult imports
SCRIPT_DIR = os.path.abspath(os.path.dirname(__file__))
CATAPULT_ROOT = os.path.abspath(os.path.join(SCRIPT_DIR, '..', '..', '..'))
sys.path.append(os.path.join(CATAPULT_ROOT, 'common', 'py_utils'))
from py_utils import shell_util as sh
sys.path.append(os.path.join(CATAPULT_ROOT, 'telemetry'))
from telemetry.core import platform as platform_module

class RollError(Exception):
  pass


def verify_dependency_entry(dependency):
  binary_manager.UpdateDependency(dependency, None, None)

# Main
def main(version):
  verify_dependency_entry('numpy')

  outdir = os.path.join(SCRIPT_DIR, 'lib')
  if os.path.exists(outdir):
    shutil.rmtree(outdir)
  os.mkdir(outdir)

  zip_full_base = os.path.join(outdir, 'numpy')
  zip_result = None

  with sh.ScopedTempDir():
    virtualenv.create_environment('env', site_packages=False)
    with sh.ScopedChangeDir('env'):
      if os.path.isdir('bin'):  # Linux/Mac
        bin_dir = 'bin'
        root_dir = glob.glob(os.path.join('lib', 'python2.*', 'site-packages'))
      elif os.path.isdir('Scripts'):  # Windows
        bin_dir = 'Scripts'
        root_dir = glob.glob(os.path.join('Lib', 'site-packages'))
      else:
        raise RollError("Can't find the bin directory at bin/ or Scripts/")

      activate_this = os.path.join(bin_dir, 'activate_this.py')
      execfile(activate_this, dict(__file__=activate_this))

      sh.CallProgram(['pip'], 'install', 'numpy=={}'.format(version))
      if len(root_dir) != 1:
        raise RollError(
            'Expected one glob match, found {}'.format(len(root_dir)))
      root_dir = root_dir[0]
      print 'Zipping result...'
      zip_result = shutil.make_archive(
          base_name=zip_full_base,
          format='zip',
          root_dir=root_dir,
          base_dir='numpy')
    print 'Uploading zip...'
    binary_manager.UpdateDependency('numpy', zip_result, version)

  print '''\
  Don't forget to run:
  $ GYP_DEFINES=fetch_telemetry_dependencies=1 \
  bin/fetch_telemetry_binary_dependencies
  if you want to use the new dependency version locally!'''

if __name__ == '__main__':
  VERSION_HELP = '''\
      Numpy package version, e.g. 1.11.3. For a release list, see \
      <https://github.com/numpy/numpy/tree/master/doc/release>. \
      For version support, see \
      `telemetry/telemetry/internal/util/external_modules.py`.'''

  try:
    parser = argparse.ArgumentParser(description=DESCRIPTION)
    parser.add_argument('version', help=VERSION_HELP)
    args = parser.parse_args()

    os.chdir(SCRIPT_DIR)
    main(args.version)
  except RollError as e:
    print '{}: {}'.format(type(e).__name__, e.message)
    sys.exit(1)
